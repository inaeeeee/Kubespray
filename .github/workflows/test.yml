name: Deploy lb-web on External K8s Server (Local with SSH)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Install PostgreSQL Client on CentOS
        run: |
          echo "🔧 Checking if PostgreSQL Client (psql) is installed..."
          if ! command -v psql &> /dev/null
          then
            echo "⚠️ PostgreSQL Client not found. Installing..."
            sudo yum install -y postgresql
          else
            echo "✅ PostgreSQL Client is already installed."
          fi

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch lb-web Deployment Info from PostgreSQL via HAProxy (Slave)
        run: |
          echo "🔍 Fetching lb-web deployment information from PostgreSQL via HAProxy (Slave)..."

          # PostgreSQL 비밀번호 없이 HAProxy(5001)에서 데이터 조회
          SERVICE_INFO=$(psql -h 192.168.60.67 -p 5001 -U postgres -d solmakasedb -t -c \
            "SELECT name, deploy_script FROM servicetemplate WHERE name = 'lb-web';")

          if [[ -z "$SERVICE_INFO" ]]; then
            echo "❌ No deployment information found for lb-web!"
            exit 1
          fi

          echo "✅ Found lb-web service info: $SERVICE_INFO"

          DEPLOY_SCRIPT=$(echo "$SERVICE_INFO" | awk -F '|' '{print $2}' | xargs)

          echo "📌 Deploy Script Path: $DEPLOY_SCRIPT"

          # 사용할 수 있는 DB 서버 목록
          DB_SERVERS=("192.168.60.64" "192.168.60.65" "192.168.60.66")
          SELECTED_DB_SERVER=""

          echo "🔍 Finding the correct DB server where the deployment script exists..."

          # 실제로 파일이 존재하는 DB 서버 찾기
          for DB_SERVER in "${DB_SERVERS[@]}"; do
              echo "🔍 Checking on $DB_SERVER..."
              if ssh -o StrictHostKeyChecking=no postgres@$DB_SERVER "test -f $DEPLOY_SCRIPT"; then
                  SELECTED_DB_SERVER=$DB_SERVER
                  echo "✅ Deployment script found on $DB_SERVER"
                  break
              fi
          done

          # DB 서버를 찾지 못하면 오류 발생
          if [[ -z "$SELECTED_DB_SERVER" ]]; then
              echo "❌ ERROR: No DB server contains the deployment script!"
              exit 1
          fi

          echo "🚀 Fetching deployment script from DB server ($SELECTED_DB_SERVER)..."
          mkdir -p /tmp/lb-web

          # 배포 스크립트 및 YAML을 해당 DB 서버에서 가져오기
          scp -o StrictHostKeyChecking=no postgres@$SELECTED_DB_SERVER:$DEPLOY_SCRIPT /tmp/lb-web/deploy.sh
          scp -o StrictHostKeyChecking=no postgres@$SELECTED_DB_SERVER:/var/lib/pgsql/data/service_templates/lb_web/yaml/deployment.yaml /tmp/lb-web/deployment.yaml

          echo "🚀 Copying deployment script and YAML to Kubernetes master server (192.168.30.32)..."
          ssh -o StrictHostKeyChecking=no devops@192.168.30.32 "mkdir -p /tmp/lb-web"
          scp -o StrictHostKeyChecking=no /tmp/lb-web/deploy.sh devops@192.168.30.32:/tmp/lb-web/deploy.sh
          scp -o StrictHostKeyChecking=no /tmp/lb-web/deployment.yaml devops@192.168.30.32:/tmp/lb-web/deployment.yaml

      - name: Execute Deploy Script on Kubernetes Master Server
        run: |
          echo "🚀 Executing deployment script on Kubernetes master server (192.168.30.32)..."
          ssh -o StrictHostKeyChecking=no devops@192.168.30.32 "chmod +x /tmp/lb-web/deploy.sh && /tmp/lb-web/deploy.sh"
